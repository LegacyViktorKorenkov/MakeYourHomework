// <auto-generated />
using System;
using MakeYourHomework.HomeworkService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MakeYourHomework.HomeworkService.Migrations
{
    [DbContext(typeof(HomeworkDataContext))]
    [Migration("20230710064205_HomeworkService_Initial_Migration")]
    partial class HomeworkService_Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.Assigment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomeworkId")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HomeworkId");

                    b.ToTable("Assigments");
                });

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.Homework", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.Assigment", b =>
                {
                    b.HasOne("MakeYourHomework.HomeworkService.Models.Homework", null)
                        .WithMany("Assigments")
                        .HasForeignKey("HomeworkId");
                });

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.Homework", b =>
                {
                    b.HasOne("MakeYourHomework.HomeworkService.Models.User", null)
                        .WithMany("Homeworks")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.User", b =>
                {
                    b.HasOne("MakeYourHomework.HomeworkService.Models.User", null)
                        .WithMany("Users")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.Homework", b =>
                {
                    b.Navigation("Assigments");
                });

            modelBuilder.Entity("MakeYourHomework.HomeworkService.Models.User", b =>
                {
                    b.Navigation("Homeworks");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
